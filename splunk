curl -v -k https://<splunk-host>:8088/services/collector/event \
  -H "Authorization: Splunk <SPLUNK_HEC_TOKEN>" \
  -H "Content-Type: application/json" \
  -d @<(echo "{\"event\": \"$(sed 's/"/\\"/g' report.html | sed ':a;N;$!ba;s/\n/ /g')\", \"sourcetype\": \"custom_html\", \"index\": \"main\"}")

index=main sourcetype=custom_html | sort -_time desc | table _time, _raw
------------------------
PYTHON
import json

# Read your HTML file
with open('your_file.html', 'r', encoding='utf-8') as f:
    html_content = f.read()

# Prepare JSON payload
payload = {
    "event": html_content,
    "sourcetype": "custom_html",
    "index": "main"
}

# Convert to JSON string (escaped)
json_data = json.dumps(payload)

print(json_data)  # You can save or send this string to Splunk

---------------------------
import json
import re

def parse_html_table(html):
    # Extract all rows between <tr>...</tr>
    rows = re.findall(r'<tr>(.*?)</tr>', html, re.DOTALL)
    if not rows:
        return []

    # Extract header columns
    headers = re.findall(r'<th>(.*?)</th>', rows[0], re.DOTALL)
    headers = [h.strip() for h in headers]

    data = []
    # Process data rows (skip header)
    for row_html in rows[1:]:
        cols = re.findall(r'<td>(.*?)</td>', row_html, re.DOTALL)
        cols = [c.strip() for c in cols]
        if len(cols) == len(headers):
            entry = dict(zip(headers, cols))
            data.append(entry)
    return data

# Read your HTML file
with open('your_file.html', 'r', encoding='utf-8') as f:
    html_content = f.read()

table_data = parse_html_table(html_content)

# Output JSON
with open('output.json', 'w', encoding='utf-8') as f:
    json.dump(table_data, f, indent=2)

print("JSON saved to output.json")


---------------------------
<dashboard>
  <label>HTML Renderer</label>
  <row>
    <panel>
      <title>Rendered HTML</title>
      <html>
        <![CDATA[
        <div id="rendered_html" style="border:1px solid #ccc; padding:10px; background:#fff;"></div>

        <script>
          require([
            "splunkjs/mvc/searchmanager",
            "splunkjs/mvc"
          ], function(SearchManager, mvc) {

            var search = new SearchManager({
              id: "htmlSearch",
              search: "index=main sourcetype=custom_html | sort -_time desc | head 1 | table _raw",
              preview: false
            });

            search.data("results").on("data", function(results) {
              if (results.hasData()) {
                var htmlData = results.data().rows[0][0];
                
                // Decode escaped quotes (optional depending on encoding)
                htmlData = htmlData.replace(/\\"/g, '"');

                // Inject as HTML content
                document.getElementById("rendered_html").innerHTML = htmlData;
              } else {
                document.getElementById("rendered_html").innerHTML = "<p>No HTML content found.</p>";
              }
            });
          });
        </script>
        ]]>
      </html>
    </panel>
  </row>
</dashboard>
