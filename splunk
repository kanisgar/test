curl -v -k https://<splunk-host>:8088/services/collector/event \
  -H "Authorization: Splunk <SPLUNK_HEC_TOKEN>" \
  -H "Content-Type: application/json" \
  -d @<(echo "{\"event\": \"$(sed 's/"/\\"/g' report.html | sed ':a;N;$!ba;s/\n/ /g')\", \"sourcetype\": \"custom_html\", \"index\": \"main\"}")

index=main sourcetype=custom_html | sort -_time desc | table _time, _raw
------------------------
PYTHON
import json

# Read your HTML file
with open('your_file.html', 'r', encoding='utf-8') as f:
    html_content = f.read()

# Prepare JSON payload
payload = {
    "event": html_content,
    "sourcetype": "custom_html",
    "index": "main"
}

# Convert to JSON string (escaped)
json_data = json.dumps(payload)

print(json_data)  # You can save or send this string to Splunk

---------------------------
from bs4 import BeautifulSoup
import json

# Read your HTML file
with open('your_file.html', 'r', encoding='utf-8') as f:
    html_content = f.read()

# Parse HTML
soup = BeautifulSoup(html_content, 'html.parser')

# Find the table (assuming only one)
table = soup.find('table')

# Extract headers
headers = [th.text.strip() for th in table.find_all('th')]

# Extract rows
rows = []
for tr in table.find_all('tr')[1:]:  # skip header row
    cells = tr.find_all('td')
    row_data = {headers[i]: cells[i].text.strip() for i in range(len(cells))}
    rows.append(row_data)

# Convert to JSON string
json_data = json.dumps(rows, indent=2)
print(json_data)

---------------------------
<dashboard>
  <label>HTML Renderer</label>
  <row>
    <panel>
      <title>Rendered HTML</title>
      <html>
        <![CDATA[
        <div id="rendered_html" style="border:1px solid #ccc; padding:10px; background:#fff;"></div>

        <script>
          require([
            "splunkjs/mvc/searchmanager",
            "splunkjs/mvc"
          ], function(SearchManager, mvc) {

            var search = new SearchManager({
              id: "htmlSearch",
              search: "index=main sourcetype=custom_html | sort -_time desc | head 1 | table _raw",
              preview: false
            });

            search.data("results").on("data", function(results) {
              if (results.hasData()) {
                var htmlData = results.data().rows[0][0];
                
                // Decode escaped quotes (optional depending on encoding)
                htmlData = htmlData.replace(/\\"/g, '"');

                // Inject as HTML content
                document.getElementById("rendered_html").innerHTML = htmlData;
              } else {
                document.getElementById("rendered_html").innerHTML = "<p>No HTML content found.</p>";
              }
            });
          });
        </script>
        ]]>
      </html>
    </panel>
  </row>
</dashboard>
